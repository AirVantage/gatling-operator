name: CI

on:
  push:
    branches:
      - main
    tags:
      - "v*.*.*"
  pull_request:
    branches:
      - main
    paths-ignore:
      - '**.md'
      - '.gitignore'
  workflow_dispatch:

permissions:
  contents: write

env:
  REGISTRY: 018471812555.dkr.ecr.eu-west-1.amazonaws.com
  IMAGE_NAME: ${{ github.repository }}

jobs:
  test:
    name: Test
    runs-on: [self-hosted]
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.17'

      - run: go version

      - name: Get Go Paths
        id: go-paths
        run: |
          echo ::set-output name=mod_cache::$(go env GOMODCACHE)
          echo ::set-output name=build_cache::$(go env GOCACHE)

      - name: Go modules and build cache
        uses: actions/cache@v3
        with:
          path: |
            ${{ steps.go-paths.outputs.mod_cache }}
            ${{ steps.go-paths.outputs.build_cache }}
          key: ${{ runner.os }}-go-${{ hashFiles('**/go.sum') }}
          restore-keys: |
            ${{ runner.os }}-go-

      - name: Go modules sync
        run: go mod tidy

      - name: Run Tests
        run: make test

  release:
    name: Build Push Release
    if: startsWith( github.ref, 'refs/tags/' )
    runs-on: [self-hosted]
    needs: test
    steps:
      - name: Checkout
        uses: actions/checkout@v3
      - name: Configure AWS Credentials
        uses: aws-actions/configure-aws-credentials@v2
        with:
          aws-region: ${{ env.AWS_REGION }}
      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1    
      - name: Setup Go
        uses: actions/setup-go@v4
        with:
          go-version: '1.17'
      - name: Set up QEMU
        uses: docker/setup-qemu-action@v2
      - name: Set up Docker Buildx
        uses: docker/setup-buildx-action@v2
      - name: Get the version
        id: get_version
        run: |
          echo ::set-output name=VERSION::${GITHUB_REF#refs/tags/v}
          echo ::set-output name=TAG_NAME::${GITHUB_REF#refs/tags/}
      - name: Create Release YAML (gatling-operator.yaml)
        env:
          VERSION: ${{ steps.get-version.outputs.version }}
        run: make manifests-release IMG=$REGISTRY/$IMAGE_NAME:$VERSION
      - name: Build and push operator image ${{ steps.get-version.outputs.VERSION }}
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.REGISTRY }}/${{ env.IMAGE_NAME }}:${{ steps.get-version.outputs.version }}
          file: ./Dockerfile
          build-args: |
            VERSION=${{ steps.get-version.outputs.version }}
          push: true
      - name: Build and push gatling-runner ${{ steps.get-version.outputs.version }}
        uses: docker/build-push-action@v3
        with:
          platforms: linux/amd64,linux/arm64
          tags: ${{ env.REGISTRY }}/gatling:${{ steps.get-version.outputs.version }}
          file: ./gatling/Dockerfile
          build-args: |
            VERSION=${{ steps.get-version.outputs.version }}
          push: true
      - name: Create Release
        uses: softprops/action-gh-release@v1
        with:
          name: ${{ steps.get_version.outputs.TAG_NAME }}
          draft: false
          prerelease: false
          generate_release_notes: true
          files: gatling-operator.yaml
